memberSearchIndex = [{"p":"io.github.skenvy","c":"CellCollection","l":"addCellToCollection(Cell)","u":"addCellToCollection(io.github.skenvy.Cell)"},{"p":"io.github.skenvy","c":"Sudoku","l":"board"},{"p":"io.github.skenvy","c":"Sudoku","l":"boardCheckComplete()"},{"p":"io.github.skenvy","c":"Sudoku","l":"boardCheckErrors()"},{"p":"io.github.skenvy","c":"Sudoku","l":"boardCheckPlacesFilled()"},{"p":"io.github.skenvy","c":"Sudoku","l":"boardCheckValid()"},{"p":"io.github.skenvy","c":"Cell","l":"Cell()","u":"%3Cinit%3E()"},{"p":"io.github.skenvy","c":"Cell","l":"Cell(int)","u":"%3Cinit%3E(int)"},{"p":"io.github.skenvy","c":"Cell","l":"Cell(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"io.github.skenvy","c":"Cell","l":"Cell(int, int, CellCollection, CellCollection, CellCollection)","u":"%3Cinit%3E(int,int,io.github.skenvy.CellCollection,io.github.skenvy.CellCollection,io.github.skenvy.CellCollection)"},{"p":"io.github.skenvy","c":"CellCollection","l":"CellCollection()","u":"%3Cinit%3E()"},{"p":"io.github.skenvy","c":"CellCollection","l":"CellCollection(int)","u":"%3Cinit%3E(int)"},{"p":"io.github.skenvy","c":"Sudoku","l":"cellFilled"},{"p":"io.github.skenvy","c":"Sudoku","l":"checkSoleCandidate()"},{"p":"io.github.skenvy","c":"Sudoku","l":"checkUniqueCandidate()"},{"p":"io.github.skenvy","c":"PermutationComputation","l":"clear()"},{"p":"io.github.skenvy","c":"Sudoku","l":"deliminatePotential(int, int, int, int, int)","u":"deliminatePotential(int,int,int,int,int)"},{"p":"io.github.skenvy","c":"Sudoku","l":"digestAsArray()"},{"p":"io.github.skenvy","c":"Sudoku","l":"errorExists()"},{"p":"io.github.skenvy","c":"Sudoku","l":"errorInSquare"},{"p":"io.github.skenvy","c":"PermutationComputation","l":"get(int)"},{"p":"io.github.skenvy","c":"SudokuGrid","l":"getBoxes()"},{"p":"io.github.skenvy","c":"CellCollection","l":"getCells()"},{"p":"io.github.skenvy","c":"SudokuGrid","l":"getColumns()"},{"p":"io.github.skenvy","c":"PermutationComputation","l":"getget(int, int)","u":"getget(int,int)"},{"p":"io.github.skenvy","c":"SudokuGrid","l":"getRows()"},{"p":"io.github.skenvy","c":"Cell","l":"getValue()"},{"p":"io.github.skenvy","c":"CellCollection","l":"getValues()"},{"p":"io.github.skenvy","c":"Sudoku","l":"initialiseBoard()"},{"p":"io.github.skenvy","c":"Sudoku","l":"initialiseNumberPresentGridRowCol(boolean)"},{"p":"io.github.skenvy","c":"Sudoku","l":"initialisePlaceCanContain(boolean)"},{"p":"io.github.skenvy","c":"Sudoku","l":"initialisePlaceFilled()"},{"p":"io.github.skenvy","c":"Utility","l":"integerSquareRoot(int)"},{"p":"io.github.skenvy","c":"Sudoku.InvlalidSudokuCongiguration","l":"InvlalidSudokuCongiguration(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.skenvy","c":"Utility","l":"isIntegerSquared(int)"},{"p":"io.github.skenvy","c":"Sudoku","l":"iterateReductionOfCanContainInGridByRowCol()"},{"p":"io.github.skenvy","c":"Sudoku","l":"iterateReductionOfCanContainInRowColByGrid()"},{"p":"io.github.skenvy","c":"Sudoku","l":"iterateReductionOfCanContainSubsetHidden()"},{"p":"io.github.skenvy","c":"Sudoku","l":"iterateReductionOfCanContainSubsetVisible()"},{"p":"io.github.skenvy","c":"Sudoku","l":"iterateSoleCandidate()"},{"p":"io.github.skenvy","c":"Sudoku","l":"iterateUniqueCandidate()"},{"p":"io.github.skenvy","c":"PermutationComputation","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"io.github.skenvy","c":"Sudoku","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"io.github.skenvy","c":"SudokuGui","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"io.github.skenvy","c":"Sudoku","l":"operationsAsArray()"},{"p":"io.github.skenvy","c":"PermutationComputation","l":"PermutationComputation()","u":"%3Cinit%3E()"},{"p":"io.github.skenvy","c":"PermutationComputation","l":"permutationComputationRoll(int, int, int, int[])","u":"permutationComputationRoll(int,int,int,int[])"},{"p":"io.github.skenvy","c":"PermutationComputation","l":"permutationCompute(int, int)","u":"permutationCompute(int,int)"},{"p":"io.github.skenvy","c":"Sudoku","l":"placeCanContainCheckCollision(int, int, int, int, int, int, int, int)","u":"placeCanContainCheckCollision(int,int,int,int,int,int,int,int)"},{"p":"io.github.skenvy","c":"Sudoku","l":"placeCanContainCheckDoesCollide(int, int, int, int, int, int, int, int, int)","u":"placeCanContainCheckDoesCollide(int,int,int,int,int,int,int,int,int)"},{"p":"io.github.skenvy","c":"Sudoku","l":"printBoardOut()"},{"p":"io.github.skenvy","c":"Sudoku","l":"printDigest()"},{"p":"io.github.skenvy","c":"Sudoku","l":"printOperations()"},{"p":"io.github.skenvy","c":"Sudoku","l":"readBoardIn(String[])","u":"readBoardIn(java.lang.String[])"},{"p":"io.github.skenvy","c":"Sudoku","l":"reductionOfCanContainInGridByRowCol()"},{"p":"io.github.skenvy","c":"Sudoku","l":"reductionOfCanContainInRowColByGrid()"},{"p":"io.github.skenvy","c":"Sudoku","l":"reductionOfCanContainSubsetHidden()"},{"p":"io.github.skenvy","c":"Sudoku","l":"reductionOfCanContainSubsetVisible()"},{"p":"io.github.skenvy","c":"Cell","l":"setValue(int)"},{"p":"io.github.skenvy","c":"PermutationComputation","l":"size()"},{"p":"io.github.skenvy","c":"Sudoku","l":"solveBoard()"},{"p":"io.github.skenvy","c":"Sudoku","l":"solveBoardEasy()"},{"p":"io.github.skenvy","c":"Sudoku","l":"solveBoardHard()"},{"p":"io.github.skenvy","c":"Sudoku","l":"solveBoardModerate()"},{"p":"io.github.skenvy","c":"Sudoku","l":"subsetCollisionAt(int, int, int[], int[][][])","u":"subsetCollisionAt(int,int,int[],int[][][])"},{"p":"io.github.skenvy","c":"Sudoku","l":"subsetCollisionAtRolling(int, int, int[], int[][][])","u":"subsetCollisionAtRolling(int,int,int[],int[][][])"},{"p":"io.github.skenvy","c":"Sudoku","l":"Sudoku()","u":"%3Cinit%3E()"},{"p":"io.github.skenvy","c":"Sudoku","l":"Sudoku(int)","u":"%3Cinit%3E(int)"},{"p":"io.github.skenvy","c":"Sudoku","l":"Sudoku(int[][][][])","u":"%3Cinit%3E(int[][][][])"},{"p":"io.github.skenvy","c":"Cell.SudokuCellCantSetValueOfPredeterminedCellException","l":"SudokuCellCantSetValueOfPredeterminedCellException()","u":"%3Cinit%3E()"},{"p":"io.github.skenvy","c":"CellCollection.SudokuCellCollectionException","l":"SudokuCellCollectionException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.skenvy","c":"Cell.SudokuCellException","l":"SudokuCellException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.skenvy","c":"SudokuGrid.SudokuCellGridException","l":"SudokuCellGridException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.github.skenvy","c":"SudokuGrid.SudokuCellGridInvalidGridShapeException","l":"SudokuCellGridInvalidGridShapeException(int)","u":"%3Cinit%3E(int)"},{"p":"io.github.skenvy","c":"SudokuGrid.SudokuCellGridInvalidGridShapeException","l":"SudokuCellGridInvalidGridShapeException(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"io.github.skenvy","c":"SudokuGrid.SudokuCellGridInvalidGridShapeException","l":"SudokuCellGridInvalidGridShapeException(int, int, int, int)","u":"%3Cinit%3E(int,int,int,int)"},{"p":"io.github.skenvy","c":"Cell.SudokuCellInvalidInitialValueException","l":"SudokuCellInvalidInitialValueException(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"io.github.skenvy","c":"SudokuGrid","l":"SudokuGrid()","u":"%3Cinit%3E()"},{"p":"io.github.skenvy","c":"SudokuGrid","l":"SudokuGrid(int)","u":"%3Cinit%3E(int)"},{"p":"io.github.skenvy","c":"SudokuGrid","l":"SudokuGrid(SudokuGrid, boolean)","u":"%3Cinit%3E(io.github.skenvy.SudokuGrid,boolean)"},{"p":"io.github.skenvy","c":"Sudoku","l":"textFieldAdd(String)","u":"textFieldAdd(java.lang.String)"},{"p":"io.github.skenvy","c":"Sudoku","l":"updateNumberPresentGridRowCol()"},{"p":"io.github.skenvy","c":"Sudoku","l":"updatePlaceCanContain()"},{"p":"io.github.skenvy","c":"Utility","l":"Utility()","u":"%3Cinit%3E()"}];updateSearchResults();